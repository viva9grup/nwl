server {
    listen 80;
    server_name www.##DOMAIN ##DOMAIN;
    location / {
        return 301 https://www.##DOMAIN$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name ##DOMAIN;
    ssl_certificate /etc/letsencrypt/live/www.##DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.##DOMAIN/privkey.pem;
    ssl_dhparam /etc/nginx/tools/dhparam.pem;
    ssl_session_timeout 5m;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    ssl_buffer_size 8k;
    resolver 8.8.4.4 8.8.8.8 valid=300s;

    location / {
        return 301 https://www.##DOMAIN$request_uri;
    }

}

server {
    listen 443 ssl;
    server_name www.##DOMAIN;
    ssl_certificate /etc/letsencrypt/live/www.##DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.##DOMAIN/privkey.pem;
    ssl_dhparam /etc/nginx/tools/dhparam.pem;
    ssl_session_timeout 5m;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers
    "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    ssl_buffer_size 8k;
    resolver 8.8.4.4 8.8.8.8 valid=300s;

    #Reverse Proxy
    location / {
        add_header 'Referrer-Policy' 'origin';
        proxy_pass https://##BACKEND;
        proxy_set_header Host $host;
        proxy_set_header Access-Control-Allow-Origin *;
        proxy_set_header X-Host ##DOMAIN;
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_set_header CF-Connecting-IP $http_CF_Connecting_IP;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $http_cf_connecting_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Referer "https://www.##DOMAIN";

        ##### Proxy Cache
        proxy_cache imgcache;
        proxy_cache_bypass $http_cache_control;
        proxy_cache_key $scheme$host$request_uri;
        proxy_cache_valid 200 60m;
        proxy_cache_valid 404 1m;
        add_header JF-Cache $upstream_cache_status;
    }
	
        location ~* \.(3gp|gif|jpg|jpeg|png|ico|wmv|avi|asf|asx|mpg|mpeg|mp4|pls|mp3|mid|wav|swf|flv|exe|zip|tar|rar|gz|tgz|bz2|uha|7z|doc|docx|xls|xlsx|pdf|iso)$ {
            gzip_static off;
            add_header Access-Control-Allow-Origin *;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            access_log off;
            expires 30d;
            break;
        }

    location @backend {
        internal;
        include /etc/nginx/tools/proxy.conf;
        include /etc/nginx/tools/proxy-cache.conf;
        proxy_pass https://moneysite;
    }
}
